version: '3.8'

services:
  # Main trading application
  app:
    build: .
    container_name: algospace-app
    env_file:
      - .env
    volumes:
      - ./src:/app/src
      - ./data:/app/data
      - ./models:/app/models
      - ./notebooks:/app/notebooks
      - ./logs:/app/logs
    ports:
      - "8000:8000"  # API
      - "8501:8501"  # Model serving
    depends_on:
      - postgres
      - redis
      - clickhouse
    networks:
      - algospace-network
    restart: unless-stopped

  # PostgreSQL for metadata and configuration
  postgres:
    image: postgres:15-alpine
    container_name: algospace-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - algospace-network
    restart: unless-stopped

  # Redis for caching and real-time data
  redis:
    image: redis:7-alpine
    container_name: algospace-redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - algospace-network
    restart: unless-stopped

  # ClickHouse for time-series data
  clickhouse:
    image: clickhouse/clickhouse-server:23-alpine
    container_name: algospace-clickhouse
    volumes:
      - clickhouse-data:/var/lib/clickhouse
      - ./config/clickhouse:/etc/clickhouse-server/config.d
    ports:
      - "8123:8123"  # HTTP interface
      - "9000:9000"  # Native interface
    networks:
      - algospace-network
    restart: unless-stopped

  # Kafka for event streaming
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: algospace-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - algospace-network
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: algospace-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - algospace-network
    restart: unless-stopped

  # Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: algospace-prometheus
    volumes:
      - ./config/prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "9090:9090"
    networks:
      - algospace-network
    restart: unless-stopped

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: algospace-grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./config/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./config/grafana/datasources:/etc/grafana/provisioning/datasources
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - algospace-network
    restart: unless-stopped

  # Ray head node for distributed computing
  ray-head:
    image: rayproject/ray:latest
    container_name: algospace-ray-head
    command: ray start --head --dashboard-host=0.0.0.0
    ports:
      - "8265:8265"  # Ray dashboard
      - "10001:10001"  # Ray head node
    environment:
      - RAY_SCHEDULER_EVENTS=0
    volumes:
      - ./models:/app/models
      - ./data:/app/data
    networks:
      - algospace-network
    restart: unless-stopped

  # JupyterLab for research
  jupyter:
    build: .
    container_name: algospace-jupyter
    command: jupyter lab --ip=0.0.0.0 --port=8888 --no-browser --allow-root
    env_file:
      - .env
    volumes:
      - ./notebooks:/app/notebooks
      - ./src:/app/src
      - ./data:/app/data
      - ./models:/app/models
    ports:
      - "8888:8888"
    networks:
      - algospace-network
    restart: unless-stopped

volumes:
  postgres-data:
  redis-data:
  clickhouse-data:
  kafka-data:
  prometheus-data:
  grafana-data:

networks:
  algospace-network:
    driver: bridge